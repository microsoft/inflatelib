
# Produces a single block whose literal/length alphabet specifies three symbols, each with a length of one, which should
# fail when trying to create the Huffman tree
# NOTE: This test is valid for both Deflate and Deflate64
>1
1       # bfinal = true
10      # Compressed with dynamic codes

00000   # HLIT = 257 (0 + 257)
00000   # HDIST = 1 (0 + 1)
1110    # HCLEN = 18 (14 + 4)

# We just need three '1' codes and a bunch of '0' codes
000 000 001 000 000 000 000 000 000 000 000 000 000 000 000 000 000 001

# We need three literal/length symbols of value 1; the rest are 0. This leaves us with needing 255 0s in total to cover
# the rest of the literal/length alphabet and the single distance value
# NOTE: The code lengths are all 1, so we can stay in non-reversed binary output to make things simpler
1 1111111 # Repeat 0 138 times
0
0
0
1 1101010 # Repeat 0 117 times

# At this point, we have all our table info and the inflater should try and initialize the Huffman trees, which should fail
