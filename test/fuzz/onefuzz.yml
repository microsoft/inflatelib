
pr: none

trigger: none

schedules:
- cron: "0 0 * * *"
  displayName: Daily fuzzing submission
  branches:
    include:
    - main
  always: true

parameters:
  - name: platform
    type: string
    default: x64

stages:
  - stage: Build_${{ parameters.platform }}
    displayName: Build ${{ parameters.platform }} Fuzzing
    jobs:
    - job: Build
      displayName: Build Fuzzing Binaries
      pool: SHINT-INT-L
      steps:
      - pwsh: |
          $VCVarsAll = & "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere" -latest -find VC\Auxiliary\Build\vcvarsall.bat
          if (!$VCVarsAll) { exit 1 }
          Write-Host "Using VCVarsAll: ${VCVarsAll}"
          Write-Host "##vso[task.setvariable variable=VCVarsAll;]$VCVarsAll"
        displayName: Locate vcvarsall.bat

      - script: |
          call $(VCVarsAll) $(platform)
          if %ERRORLEVEL% NEQ 0 exit /B %ERRORLEVEL%

          scripts\init.cmd -c msvc -b relwithdebinfo -f
          if %ERRORLEVEL% NEQ 0 exit /B %ERRORLEVEL%

          scripts\build-all.cmd
        displayName: Build The Fuzzing Binaries

      - task: onefuzz-task@0
        displayName: Submit to OneFuzz
        inputs:
          onefuzzOSes: Windows
        env:
          onefuzzDropDirectory: $(Build.SourcesDirectory)\build\win\msvc$(platform)relwithdebinfo\fuzz\
          SYSTEM_ACCESSTOKEN: $(System.AccessToken)

